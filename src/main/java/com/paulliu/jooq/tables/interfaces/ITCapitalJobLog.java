/*
 * This file is generated by jOOQ.
*/
package com.paulliu.jooq.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * 定时任务日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ITCapitalJobLog extends VertxPojo, Serializable {

    /**
     * Setter for <code>test.t_capital_job_log.id</code>. id
     */
    public ITCapitalJobLog setId(Long value);

    /**
     * Getter for <code>test.t_capital_job_log.id</code>. id
     */
    public Long getId();

    /**
     * Setter for <code>test.t_capital_job_log.job_id</code>. 任务id
     */
    public ITCapitalJobLog setJobId(Long value);

    /**
     * Getter for <code>test.t_capital_job_log.job_id</code>. 任务id
     */
    public Long getJobId();

    /**
     * Setter for <code>test.t_capital_job_log.job_name</code>. 任务名称
     */
    public ITCapitalJobLog setJobName(String value);

    /**
     * Getter for <code>test.t_capital_job_log.job_name</code>. 任务名称
     */
    public String getJobName();

    /**
     * Setter for <code>test.t_capital_job_log.machine_ip</code>. 机器ip地址
     */
    public ITCapitalJobLog setMachineIp(String value);

    /**
     * Getter for <code>test.t_capital_job_log.machine_ip</code>. 机器ip地址
     */
    public String getMachineIp();

    /**
     * Setter for <code>test.t_capital_job_log.status</code>. 任务执行状态:success:成功、fail:失败
     */
    public ITCapitalJobLog setStatus(String value);

    /**
     * Getter for <code>test.t_capital_job_log.status</code>. 任务执行状态:success:成功、fail:失败
     */
    public String getStatus();

    /**
     * Setter for <code>test.t_capital_job_log.error_msg</code>. 任务异常信息
     */
    public ITCapitalJobLog setErrorMsg(String value);

    /**
     * Getter for <code>test.t_capital_job_log.error_msg</code>. 任务异常信息
     */
    public String getErrorMsg();

    /**
     * Setter for <code>test.t_capital_job_log.start_date</code>. 任务开始时间
     */
    public ITCapitalJobLog setStartDate(Timestamp value);

    /**
     * Getter for <code>test.t_capital_job_log.start_date</code>. 任务开始时间
     */
    public Timestamp getStartDate();

    /**
     * Setter for <code>test.t_capital_job_log.end_date</code>. 任务结束时间
     */
    public ITCapitalJobLog setEndDate(Timestamp value);

    /**
     * Getter for <code>test.t_capital_job_log.end_date</code>. 任务结束时间
     */
    public Timestamp getEndDate();

    /**
     * Setter for <code>test.t_capital_job_log.sharding_item</code>. 分片序号
     */
    public ITCapitalJobLog setShardingItem(Long value);

    /**
     * Getter for <code>test.t_capital_job_log.sharding_item</code>. 分片序号
     */
    public Long getShardingItem();

    /**
     * Setter for <code>test.t_capital_job_log.exec_count</code>. 单任务处理条数
     */
    public ITCapitalJobLog setExecCount(Long value);

    /**
     * Getter for <code>test.t_capital_job_log.exec_count</code>. 单任务处理条数
     */
    public Long getExecCount();

    /**
     * Setter for <code>test.t_capital_job_log.created_at</code>. 创建时间
     */
    public ITCapitalJobLog setCreatedAt(Timestamp value);

    /**
     * Getter for <code>test.t_capital_job_log.created_at</code>. 创建时间
     */
    public Timestamp getCreatedAt();

    /**
     * Setter for <code>test.t_capital_job_log.created_by</code>. 创建人
     */
    public ITCapitalJobLog setCreatedBy(String value);

    /**
     * Getter for <code>test.t_capital_job_log.created_by</code>. 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>test.t_capital_job_log.updated_at</code>. 修改时间
     */
    public ITCapitalJobLog setUpdatedAt(Timestamp value);

    /**
     * Getter for <code>test.t_capital_job_log.updated_at</code>. 修改时间
     */
    public Timestamp getUpdatedAt();

    /**
     * Setter for <code>test.t_capital_job_log.updated_by</code>. 修改人
     */
    public ITCapitalJobLog setUpdatedBy(String value);

    /**
     * Getter for <code>test.t_capital_job_log.updated_by</code>. 修改人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ITCapitalJobLog
     */
    public void from(com.paulliu.jooq.tables.interfaces.ITCapitalJobLog from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ITCapitalJobLog
     */
    public <E extends com.paulliu.jooq.tables.interfaces.ITCapitalJobLog> E into(E into);

    @Override
    public default ITCapitalJobLog fromJson(io.vertx.core.json.JsonObject json) {
        setId(json.getLong("id"));
        setJobId(json.getLong("job_id"));
        setJobName(json.getString("job_name"));
        setMachineIp(json.getString("machine_ip"));
        setStatus(json.getString("status"));
        setErrorMsg(json.getString("error_msg"));
        // Omitting unrecognized type java.sql.Timestamp for column start_date!
        // Omitting unrecognized type java.sql.Timestamp for column end_date!
        setShardingItem(json.getLong("sharding_item"));
        setExecCount(json.getLong("exec_count"));
        // Omitting unrecognized type java.sql.Timestamp for column created_at!
        setCreatedBy(json.getString("created_by"));
        // Omitting unrecognized type java.sql.Timestamp for column updated_at!
        setUpdatedBy(json.getString("updated_by"));
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("job_id",getJobId());
        json.put("job_name",getJobName());
        json.put("machine_ip",getMachineIp());
        json.put("status",getStatus());
        json.put("error_msg",getErrorMsg());
        // Omitting unrecognized type java.sql.Timestamp for column start_date!
        // Omitting unrecognized type java.sql.Timestamp for column end_date!
        json.put("sharding_item",getShardingItem());
        json.put("exec_count",getExecCount());
        // Omitting unrecognized type java.sql.Timestamp for column created_at!
        json.put("created_by",getCreatedBy());
        // Omitting unrecognized type java.sql.Timestamp for column updated_at!
        json.put("updated_by",getUpdatedBy());
        return json;
    }

}
