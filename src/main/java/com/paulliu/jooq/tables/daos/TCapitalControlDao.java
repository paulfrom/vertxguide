/*
 * This file is generated by jOOQ.
*/
package com.paulliu.jooq.tables.daos;


import com.paulliu.jooq.tables.TCapitalControl;
import com.paulliu.jooq.tables.records.TCapitalControlRecord;

import io.github.jklingsporn.vertx.jooq.shared.internal.async.AbstractAsyncVertxDAO;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;


import io.reactivex.Completable;
import io.reactivex.Observable;
import io.reactivex.Single;
import java.util.Optional;
import io.github.jklingsporn.vertx.jooq.rx.async.AsyncRXQueryExecutor;
/**
 * 充转提控制表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCapitalControlDao extends AbstractAsyncVertxDAO<TCapitalControlRecord, com.paulliu.jooq.tables.pojos.TCapitalControl, Long, Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>>, Single<Optional<com.paulliu.jooq.tables.pojos.TCapitalControl>>, Single<Integer>, Single<Long>> implements io.github.jklingsporn.vertx.jooq.rx.VertxDAO<TCapitalControlRecord,com.paulliu.jooq.tables.pojos.TCapitalControl,Long> {

    /**
     * @param configuration Used for rendering, so only SQLDialect must be set and must be one of the MYSQL types or POSTGRES.
     * @param delegate A configured AsyncSQLClient that is used for query execution
     */
    public TCapitalControlDao(Configuration configuration,io.vertx.reactivex.ext.asyncsql.AsyncSQLClient delegate) {
        super(TCapitalControl.T_CAPITAL_CONTROL, com.paulliu.jooq.tables.pojos.TCapitalControl.class, new AsyncRXQueryExecutor<TCapitalControlRecord,com.paulliu.jooq.tables.pojos.TCapitalControl,Long>(delegate,com.paulliu.jooq.tables.pojos.TCapitalControl::new, TCapitalControl.T_CAPITAL_CONTROL), configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.paulliu.jooq.tables.pojos.TCapitalControl object) {
        return object.getId();
    }

    /**
     * Find records that have <code>control_type IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByControlType(List<String> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.CONTROL_TYPE.in(values));
    }

    /**
     * Find records that have <code>control_key IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByControlKey(List<String> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.CONTROL_KEY.in(values));
    }

    /**
     * Find records that have <code>control_value IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByControlValue(List<String> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.CONTROL_VALUE.in(values));
    }

    /**
     * Find records that have <code>control_status IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByControlStatus(List<String> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.CONTROL_STATUS.in(values));
    }

    /**
     * Find records that have <code>created_at IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByCreatedAt(List<Timestamp> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>created_by IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByCreatedBy(List<String> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>updated_at IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByUpdatedAt(List<Timestamp> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>updated_by IN (values)</code> asynchronously
     */
    public Single<List<com.paulliu.jooq.tables.pojos.TCapitalControl>> findManyByUpdatedBy(List<String> values) {
        return findManyByCondition(TCapitalControl.T_CAPITAL_CONTROL.UPDATED_BY.in(values));
    }

    @Override
    protected java.util.function.Function<Object,Long> keyConverter(){
        return lastId -> Long.valueOf(((Long)lastId).longValue());
    }
}
