/*
 * This file is generated by jOOQ.
*/
package com.paulliu.jooq.tables;


import com.paulliu.jooq.Indexes;
import com.paulliu.jooq.Keys;
import com.paulliu.jooq.Test;
import com.paulliu.jooq.tables.records.TCapitalJobLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 定时任务日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCapitalJobLog extends TableImpl<TCapitalJobLogRecord> {

    private static final long serialVersionUID = -668993889;

    /**
     * The reference instance of <code>test.t_capital_job_log</code>
     */
    public static final TCapitalJobLog T_CAPITAL_JOB_LOG = new TCapitalJobLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCapitalJobLogRecord> getRecordType() {
        return TCapitalJobLogRecord.class;
    }

    /**
     * The column <code>test.t_capital_job_log.id</code>. id
     */
    public final TableField<TCapitalJobLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id");

    /**
     * The column <code>test.t_capital_job_log.job_id</code>. 任务id
     */
    public final TableField<TCapitalJobLogRecord, Long> JOB_ID = createField("job_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "任务id");

    /**
     * The column <code>test.t_capital_job_log.job_name</code>. 任务名称
     */
    public final TableField<TCapitalJobLogRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "任务名称");

    /**
     * The column <code>test.t_capital_job_log.machine_ip</code>. 机器ip地址
     */
    public final TableField<TCapitalJobLogRecord, String> MACHINE_IP = createField("machine_ip", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "机器ip地址");

    /**
     * The column <code>test.t_capital_job_log.status</code>. 任务执行状态:success:成功、fail:失败
     */
    public final TableField<TCapitalJobLogRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "任务执行状态:success:成功、fail:失败");

    /**
     * The column <code>test.t_capital_job_log.error_msg</code>. 任务异常信息
     */
    public final TableField<TCapitalJobLogRecord, String> ERROR_MSG = createField("error_msg", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "任务异常信息");

    /**
     * The column <code>test.t_capital_job_log.start_date</code>. 任务开始时间
     */
    public final TableField<TCapitalJobLogRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "任务开始时间");

    /**
     * The column <code>test.t_capital_job_log.end_date</code>. 任务结束时间
     */
    public final TableField<TCapitalJobLogRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "任务结束时间");

    /**
     * The column <code>test.t_capital_job_log.sharding_item</code>. 分片序号
     */
    public final TableField<TCapitalJobLogRecord, Long> SHARDING_ITEM = createField("sharding_item", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "分片序号");

    /**
     * The column <code>test.t_capital_job_log.exec_count</code>. 单任务处理条数
     */
    public final TableField<TCapitalJobLogRecord, Long> EXEC_COUNT = createField("exec_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "单任务处理条数");

    /**
     * The column <code>test.t_capital_job_log.created_at</code>. 创建时间
     */
    public final TableField<TCapitalJobLogRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>test.t_capital_job_log.created_by</code>. 创建人
     */
    public final TableField<TCapitalJobLogRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "创建人");

    /**
     * The column <code>test.t_capital_job_log.updated_at</code>. 修改时间
     */
    public final TableField<TCapitalJobLogRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>test.t_capital_job_log.updated_by</code>. 修改人
     */
    public final TableField<TCapitalJobLogRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "修改人");

    /**
     * Create a <code>test.t_capital_job_log</code> table reference
     */
    public TCapitalJobLog() {
        this(DSL.name("t_capital_job_log"), null);
    }

    /**
     * Create an aliased <code>test.t_capital_job_log</code> table reference
     */
    public TCapitalJobLog(String alias) {
        this(DSL.name(alias), T_CAPITAL_JOB_LOG);
    }

    /**
     * Create an aliased <code>test.t_capital_job_log</code> table reference
     */
    public TCapitalJobLog(Name alias) {
        this(alias, T_CAPITAL_JOB_LOG);
    }

    private TCapitalJobLog(Name alias, Table<TCapitalJobLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCapitalJobLog(Name alias, Table<TCapitalJobLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "定时任务日志表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CAPITAL_JOB_LOG_IDX_CAPITAL_JOB_LOG_JOB_ID_PK, Indexes.T_CAPITAL_JOB_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCapitalJobLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_CAPITAL_JOB_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCapitalJobLogRecord> getPrimaryKey() {
        return Keys.KEY_T_CAPITAL_JOB_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCapitalJobLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TCapitalJobLogRecord>>asList(Keys.KEY_T_CAPITAL_JOB_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCapitalJobLog as(String alias) {
        return new TCapitalJobLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCapitalJobLog as(Name alias) {
        return new TCapitalJobLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCapitalJobLog rename(String name) {
        return new TCapitalJobLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCapitalJobLog rename(Name name) {
        return new TCapitalJobLog(name, null);
    }
}
