/*
 * This file is generated by jOOQ.
*/
package com.paulliu.jooq.tables;


import com.paulliu.jooq.Indexes;
import com.paulliu.jooq.Keys;
import com.paulliu.jooq.Test;
import com.paulliu.jooq.tables.records.TCapitalControlRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 充转提控制表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCapitalControl extends TableImpl<TCapitalControlRecord> {

    private static final long serialVersionUID = -171793230;

    /**
     * The reference instance of <code>test.t_capital_control</code>
     */
    public static final TCapitalControl T_CAPITAL_CONTROL = new TCapitalControl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCapitalControlRecord> getRecordType() {
        return TCapitalControlRecord.class;
    }

    /**
     * The column <code>test.t_capital_control.id</code>. ID
     */
    public final TableField<TCapitalControlRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "ID");

    /**
     * The column <code>test.t_capital_control.control_type</code>. 控制类型
     */
    public final TableField<TCapitalControlRecord, String> CONTROL_TYPE = createField("control_type", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "控制类型");

    /**
     * The column <code>test.t_capital_control.control_key</code>. KEY
     */
    public final TableField<TCapitalControlRecord, String> CONTROL_KEY = createField("control_key", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "KEY");

    /**
     * The column <code>test.t_capital_control.control_value</code>. VALUE
     */
    public final TableField<TCapitalControlRecord, String> CONTROL_VALUE = createField("control_value", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "VALUE");

    /**
     * The column <code>test.t_capital_control.control_status</code>. 状态
     */
    public final TableField<TCapitalControlRecord, String> CONTROL_STATUS = createField("control_status", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "状态");

    /**
     * The column <code>test.t_capital_control.created_at</code>. 创建时间
     */
    public final TableField<TCapitalControlRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>test.t_capital_control.created_by</code>. 创建人
     */
    public final TableField<TCapitalControlRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "创建人");

    /**
     * The column <code>test.t_capital_control.updated_at</code>. 修改时间
     */
    public final TableField<TCapitalControlRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>test.t_capital_control.updated_by</code>. 修改人
     */
    public final TableField<TCapitalControlRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "修改人");

    /**
     * Create a <code>test.t_capital_control</code> table reference
     */
    public TCapitalControl() {
        this(DSL.name("t_capital_control"), null);
    }

    /**
     * Create an aliased <code>test.t_capital_control</code> table reference
     */
    public TCapitalControl(String alias) {
        this(DSL.name(alias), T_CAPITAL_CONTROL);
    }

    /**
     * Create an aliased <code>test.t_capital_control</code> table reference
     */
    public TCapitalControl(Name alias) {
        this(alias, T_CAPITAL_CONTROL);
    }

    private TCapitalControl(Name alias, Table<TCapitalControlRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCapitalControl(Name alias, Table<TCapitalControlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "充转提控制表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CAPITAL_CONTROL_I_CAPITAL_CONTROL_TYPE_KEY, Indexes.T_CAPITAL_CONTROL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCapitalControlRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_CAPITAL_CONTROL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCapitalControlRecord> getPrimaryKey() {
        return Keys.KEY_T_CAPITAL_CONTROL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCapitalControlRecord>> getKeys() {
        return Arrays.<UniqueKey<TCapitalControlRecord>>asList(Keys.KEY_T_CAPITAL_CONTROL_PRIMARY, Keys.KEY_T_CAPITAL_CONTROL_I_CAPITAL_CONTROL_TYPE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCapitalControl as(String alias) {
        return new TCapitalControl(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCapitalControl as(Name alias) {
        return new TCapitalControl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCapitalControl rename(String name) {
        return new TCapitalControl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCapitalControl rename(Name name) {
        return new TCapitalControl(name, null);
    }
}
